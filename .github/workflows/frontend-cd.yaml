name: cd-frontend-workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  WORKING_DIRECTORY_BE: /home/runner/work/Project-4-AWS-Final/Project-4-AWS-Final/starter/frontend/
  NODE_VERSION: '18.x'
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}

      - name: Install dependencies
        run: npm install
        working-directory: ${{env.WORKING_DIRECTORY_BE}}

      - name: Run linter
        run: npm run lint
        working-directory: ${{env.WORKING_DIRECTORY_BE}}

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}

      - name: Install dependencies
        run: npm install
        working-directory: ${{env.WORKING_DIRECTORY_BE}}

      - name: Run tests
        run: npm run test
        working-directory: ${{env.WORKING_DIRECTORY_BE}}

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          docker build \
          -t ${{ env.ECR_REPOSITORY_FE }}:latest .

  login-ecr:
    needs: build
    runs-on: ubuntu-latest
    steps:

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

  push-ecr:
  needs: login-ecr
  runs-on: ubuntu-latest
  steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Push to ECR
      run: |
        docker tag ${{ env.ECR_REPOSITORY_FE }}:latest ${{ env.ECR_REPOSITORY_FE }}:latest
        docker push ${{ env.ECR_REPOSITORY_FE }}:latest

#  deploy:
#    needs: push-ecr
#    runs-on: ubuntu-latest
#    steps:
#      - name: Configure AWS credentials
#          uses: aws-actions/configure-aws-credentials@v2
#          with:
#            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#            aws-region: ${{ env.AWS_REGION }}
#            - name: Setup kubectl
#              uses: azure/setup-kubectl@v1
#              with:
#                version: 'v1.21.0'
#            - name: Update Kubernetes deployment
#              run: |
#                kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} ${{ env.CONTAINER_NAME }}=${{ env.ECR_REPOSITORY }}:latest
#
#      - name: Deploy to Kubernetes
#        run: |
#          kustomize build